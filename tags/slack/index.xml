<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>slack on StackStorm</title><link>https://stackstorm.github.io/stackstorm.com/tags/slack/</link><description>Recent content in slack on StackStorm</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 03 May 2018 17:00:21 +0000</lastBuildDate><atom:link href="https://stackstorm.github.io/stackstorm.com/tags/slack/index.xml" rel="self" type="application/rss+xml"/><item><title>Simplified Network Performance Tests with PerfSonar and SLX</title><link>https://stackstorm.github.io/stackstorm.com/2018/05/03/simplified-network-performance-tests-with-perfsonar-and-slx/</link><pubDate>Thu, 03 May 2018 17:00:21 +0000</pubDate><guid>https://stackstorm.github.io/stackstorm.com/2018/05/03/simplified-network-performance-tests-with-perfsonar-and-slx/</guid><description>&lt;p>&lt;em>May 3, 2018&lt;/em>&lt;br>
&lt;em>by Lindsay Hill&lt;/em>&lt;/p>
&lt;p>&lt;a href="https://www.perfsonar.net/">PerfSonar&lt;/a>Â is a super handy toolkit for measuring network performance between any two points. Combine this with the Guest VM built into theÂ &lt;a href="https://www.extremenetworks.com/product/slx-9850-router/">Extreme SLX series of switches,&lt;/a>Â and you can easily run performance tests between any two points on your network, measuring performance, latency, jitter, MTU, path taken, etc. Combine that with StackStorm, and you can easily run those tests from Slack. No need to even login to a switch.&lt;/p>
&lt;h2 id="demo-network-performance-tests-via-slack">Demo: Network Performance Tests via Slack&lt;/h2>
&lt;p>Check out the video here. From Slack, we can trigger different tests between any two switches â€“ &lt;a href="https://en.wikipedia.org/wiki/Iperf">performance&lt;/a>, &lt;a href="http://software.internet2.edu/owamp/">one-way latency measurement&lt;/a>, or &lt;a href="https://linux.die.net/man/8/tracepath">trace the path&lt;/a>, showing the path MTU. The results are then shown in Slack:&lt;/p>
&lt;p>Read on for more about how to set this up.&lt;/p></description></item><item><title>Simple Packet Captures with SLX and CloudShark</title><link>https://stackstorm.github.io/stackstorm.com/2018/04/26/simple-packet-captures-with-slx-and-cloudshark/</link><pubDate>Fri, 27 Apr 2018 03:54:32 +0000</pubDate><guid>https://stackstorm.github.io/stackstorm.com/2018/04/26/simple-packet-captures-with-slx-and-cloudshark/</guid><description>&lt;p>&lt;em>April 27, 2018&lt;/em>&lt;br>
&lt;em>by Lindsay Hill&lt;/em>&lt;/p>
&lt;p>Packet Captures are a necessary evil when you need to prove network innocence. But theyâ€™re tedious to configure, collect &amp;amp; analyze. What if you could simplify the setup, collection and viewing? Thatâ€™s what weâ€™ve done here, combining StackStorm, Extreme Insight Architecture, &lt;a href="https://www.cloudshark.org">CloudShark&lt;/a>, and of course Slack.&lt;/p>
&lt;h2 id="demo-running-packet-captures-from-slack">Demo: Running Packet Captures from Slack&lt;/h2>
&lt;p>Check out the video here â€“ we show entering some commands in Slack, which triggers a packet capture on multiple switches. The PCAPs are automatically uploaded to CloudShark, so we can view the packets in our browser:&lt;/p>
&lt;p>Read on for more about how to set this up.&lt;/p></description></item><item><title>August Pack Updates</title><link>https://stackstorm.github.io/stackstorm.com/2017/09/04/august-pack-updates/</link><pubDate>Mon, 04 Sep 2017 23:32:12 +0000</pubDate><guid>https://stackstorm.github.io/stackstorm.com/2017/09/04/august-pack-updates/</guid><description>&lt;p>August has rolled on by, but our Northern Hemisphere users have not been taking a break over summer: StackStorm Exchange updates continue, with new packs and updates. This time, we also have a request for our AWS pack users.&lt;/p></description></item><item><title>StackStorm 1.2.0: the new ChatOps</title><link>https://stackstorm.github.io/stackstorm.com/2015/12/08/stackstorm-1-2-0-the-new-chatops/</link><pubDate>Tue, 08 Dec 2015 15:07:00 +0000</pubDate><guid>https://stackstorm.github.io/stackstorm.com/2015/12/08/stackstorm-1-2-0-the-new-chatops/</guid><description>&lt;p>&lt;strong>December 8, 2015&lt;/strong>&lt;br>
&lt;em>by Edward Medvedev&lt;/em>&lt;/p>
&lt;p>ChatOps â€” a concept where a chat bot acts as a control plane for your operations â€” has always been a core part of StackStorm. It adds context to your actions, automates routine tasks nobody likes, helps team members communicate better and learn from each other, and sometimes itâ€™s just plain fun. If youâ€™re new to this, check out the &lt;a href="https://www.youtube.com/watch?v=37LmuHToYjQ">DevOps Next Steps talk&lt;/a> by &lt;a href="https://github.com/jfryman">James Fryman&lt;/a>, and if youâ€™ve been writing Eggdrop scripts in IRC since you were five but never used it in your daily operations, you might also get inspired from the &lt;a href="http://www.youtube.com/watch?v=NST3u-GjjFw">ChatOps at GitHub talk&lt;/a> by Jesse Newland.&lt;/p>
&lt;p>Today, weâ€™re all excited to introduce â€” as a part of our &lt;a href="https://github.com/StackStorm/st2/releases/tag/v1.2.0">1.2.0 release&lt;/a> â€” a completely revamped ChatOps feature list. If youâ€™re already using our Hubot integration to execute StackStorm actions from chat, stop doing whatever it is youâ€™re doing and update! If not, itâ€™s a good time to get started: ChatOps is the way of the future, now more than ever.&lt;/p></description></item><item><title>AHH #04 â€“ Typeform to Slack Auto-Invite</title><link>https://stackstorm.github.io/stackstorm.com/2015/06/26/ahh04-typeform-to-slack-auto-invite/</link><pubDate>Fri, 26 Jun 2015 23:58:27 +0000</pubDate><guid>https://stackstorm.github.io/stackstorm.com/2015/06/26/ahh04-typeform-to-slack-auto-invite/</guid><description/></item><item><title>Ansible and ChatOps. Get started ðŸš€</title><link>https://stackstorm.github.io/stackstorm.com/2015/06/24/ansible-chatops-get-started-%F0%9F%9A%80/</link><pubDate>Wed, 24 Jun 2015 20:16:09 +0000</pubDate><guid>https://stackstorm.github.io/stackstorm.com/2015/06/24/ansible-chatops-get-started-%F0%9F%9A%80/</guid><description>&lt;p>&lt;strong>June 25, 2015&lt;/strong> &lt;!-- raw HTML omitted -->(Updated: February 21, 2017)&lt;!-- raw HTML omitted -->&lt;br>
&lt;em>Contribution by Integration Developer &lt;!-- raw HTML omitted -->Eugen C.&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/HWN8T78.png" alt="Ansible and ChatOps with StackStorm event-driven automation platform, Slack, Hubot">&lt;/p>
&lt;h2 id="what-is-chatops">What is ChatOps?&lt;/h2>
&lt;blockquote>
&lt;p>ChatOps brings the context of work you are already doing into the conversations you are already having. &lt;!-- raw HTML omitted -->@jfryman&lt;!-- raw HTML omitted -->&lt;/p>
&lt;/blockquote>
&lt;p>ChatOps is still a fresh and uncommon thing in the DevOps world, where work is brought into a shared chat room. You can run commands directly from chat and everyone in the chatroom can see the history of work being done, do the same, interact with each other and even learn. The information and process is owned by the entire team which brings a lot of benefits.&lt;/p></description></item></channel></rss>